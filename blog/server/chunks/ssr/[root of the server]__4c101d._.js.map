{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitani/Documents/project/blog/blog/app/data/post.ts"],"sourcesContent":["import path from \"path\";\nimport fs from \"fs\";\nimport matter from \"gray-matter\";\n\n// 读取全部文章数据\nconst rootDirectory = path.join(process.cwd(), \"posts\");\n\nexport const getAllPosts = async () => {\n  const posts = fs\n    .readdirSync(rootDirectory, { withFileTypes: true })\n    .filter((entry) => entry.isDirectory())\n    .map((dir) => dir.name);\n\n  const data = await Promise.all(\n    posts.map(async (post) => {\n      const postData = await getPostBySlug(post);\n      return {\n        slug: post,\n        meta: {\n          title: postData?.meta.title,\n          spoiler: postData?.meta.spoiler,\n          date: new Date(postData?.meta.date).toLocaleDateString(\"en-US\", {\n            month: \"long\",\n            day: \"numeric\",\n            year: \"numeric\",\n          }),\n        },\n      };\n    })\n  );\n\n  return data.sort((a, b) => Date.parse(b.meta.date) - Date.parse(a.meta.date));\n};\n\nexport const getPostBySlug = async (slug: string) => {\n  const filePath = path.join(rootDirectory, slug, \"index.md\");\n  if (!fs.existsSync(filePath)) {\n    return null;\n  }\n  try {\n    const fileContent = fs.readFileSync(filePath, \"utf-8\");\n    const { data: meta, content } = matter(fileContent);\n    return {\n      meta,\n      content,\n    };\n  } catch (error) {\n    console.error(\"Error reading file:\", error);\n    return null;\n  }\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,WAAW;AACX,MAAM,gBAAgB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAExC,MAAM,cAAc;IACzB,MAAM,QAAQ,6FAAA,CAAA,UAAE,CACb,WAAW,CAAC,eAAe;QAAE,eAAe;IAAK,GACjD,MAAM,CAAC,CAAC,QAAU,MAAM,WAAW,IACnC,GAAG,CAAC,CAAC,MAAQ,IAAI,IAAI;IAExB,MAAM,OAAO,MAAM,QAAQ,GAAG,CAC5B,MAAM,GAAG,CAAC,OAAO;QACf,MAAM,WAAW,MAAM,cAAc;QACrC,OAAO;YACL,MAAM;YACN,MAAM;gBACJ,OAAO,UAAU,KAAK;gBACtB,SAAS,UAAU,KAAK;gBACxB,MAAM,IAAI,KAAK,UAAU,KAAK,MAAM,kBAAkB,CAAC,SAAS;oBAC9D,OAAO;oBACP,KAAK;oBACL,MAAM;gBACR;YACF;QACF;IACF;IAGF,OAAO,KAAK,IAAI,CAAC,CAAC,GAAG,IAAM,KAAK,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI;AAC7E;AAEO,MAAM,gBAAgB,OAAO;IAClC,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,eAAe,MAAM;IAChD,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,WAAW;QAC5B,OAAO;IACT;IACA,IAAI;QACF,MAAM,cAAc,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QAC9C,MAAM,EAAE,MAAM,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,kMAAA,CAAA,UAAM,AAAD,EAAE;QACvC,OAAO;YACL;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO;IACT;AACF"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitani/Documents/project/blog/blog/app/ui/blogs/mdx-components.tsx"],"sourcesContent":["import { HTMLAttributes } from \"react\";\n\ninterface Props extends HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst components = {\n  h1: ({ children }: Props) => (\n    <h1 className=\"text-3xl font-bold mt-8 mb-4\">{children}</h1>\n  ),\n  h2: ({ children }: Props) => (\n    <h2 className=\"text-2xl font-bold mt-6 mb-4\">{children}</h2>\n  ),\n  h3: ({ children }: Props) => (\n    <h3 className=\"text-xl font-bold mt-4 mb-2\">{children}</h3>\n  ),\n  p: ({ children }: Props) => (\n    <p className=\"my-2 leading-7 text-foreground overflow-x-auto\">{children}</p>\n  ),\n  code: ({ children, className }: Props) => {\n    // For inline code\n    if (!className) {\n      return (\n        <code className=\"bg-[#2a2d3d] dark:bg-[#292929] rounded px-1 py-0.5 text-[#85E89D] dark:text-[#85E89D]\">\n          {children}\n        </code>\n      );\n    }\n    // For code blocks\n    return (\n      <code\n        className={`block bg-[#2a2d3d] dark:bg-[#292929] text-[#85E89D] dark:text-[#85E89D] rounded p-2 my-2 overflow-x-auto ${className}`}\n      >\n        {children}\n      </code>\n    );\n  },\n  pre: ({ children }: Props) => (\n    <pre className=\"bg-[#2a2d3d] dark:bg-[#292929] text-[#85E89D] dark:text-[#85E89D] rounded p-2 my-2 overflow-x-auto\">\n      {children}\n    </pre>\n  ),\n};\n\nexport default components;\n"],"names":[],"mappings":";;;;;AAMA,MAAM,aAAa;IACjB,IAAI,CAAC,EAAE,QAAQ,EAAS,iBACtB,kYAAC;YAAG,WAAU;sBAAgC;;;;;;IAEhD,IAAI,CAAC,EAAE,QAAQ,EAAS,iBACtB,kYAAC;YAAG,WAAU;sBAAgC;;;;;;IAEhD,IAAI,CAAC,EAAE,QAAQ,EAAS,iBACtB,kYAAC;YAAG,WAAU;sBAA+B;;;;;;IAE/C,GAAG,CAAC,EAAE,QAAQ,EAAS,iBACrB,kYAAC;YAAE,WAAU;sBAAkD;;;;;;IAEjE,MAAM,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAS;QACnC,kBAAkB;QAClB,IAAI,CAAC,WAAW;YACd,qBACE,kYAAC;gBAAK,WAAU;0BACb;;;;;;QAGP;QACA,kBAAkB;QAClB,qBACE,kYAAC;YACC,WAAW,CAAC,yGAAyG,EAAE,WAAW;sBAEjI;;;;;;IAGP;IACA,KAAK,CAAC,EAAE,QAAQ,EAAS,iBACvB,kYAAC;YAAI,WAAU;sBACZ;;;;;;AAGP;uCAEe"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitani/Documents/project/blog/blog/app/blogs/%5Bslug%5D/page.tsx"],"sourcesContent":["import { getAllPosts, getPostBySlug } from \"@/app/data/post\";\nimport { MDXRemote } from \"next-mdx-remote/rsc\";\nimport Link from \"next/link\";\nimport \"./markdown.css\";\nimport remarkSmartpants from \"remark-smartypants\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport mdxComponents from \"@/app/ui/blogs/mdx-components\";\nimport { notFound } from \"next/navigation\";\nexport default async function BlogPage({\n  params,\n}: {\n  params: Promise<{ slug: string }>;\n}) {\n  const { slug } = await params;\n  const { post, content } = await getSourceData(slug);\n\n  if (!post || !content) {\n    return notFound();\n  }\n\n  return (\n    <article className=\"max-w-3xl mx-auto py-8 w-full\">\n      <h1 className=\"text-4xl font-black leading-tight text-foreground mb-4\">\n        {post.meta.title}\n      </h1>\n      <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-8\">\n        {post.meta.date}\n      </p>\n      <div className=\"markdown prose dark:prose-invert\">\n        <MDXRemote\n          source={content}\n          components={{ a: Link, ...mdxComponents }}\n          options={{\n            mdxOptions: {\n              useDynamicImport: true,\n              remarkPlugins: [remarkSmartpants],\n              rehypePlugins: [rehypePrettyCode],\n            },\n          }}\n        />\n      </div>\n    </article>\n  );\n}\n\nexport async function generateStaticParams() {\n  const posts = await getAllPosts();\n  return posts.map((post) => ({ slug: post.slug }));\n}\n\n// Get MDX data for a specific slug\nasync function getSourceData(slug: string) {\n  const post = await getPostBySlug(slug);\n  if (!post) {\n    return { post: null, content: null };\n  }\n  return { post, content: post.content };\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAEA;;;;;;;;;;;;;;AACe,eAAe,SAAS,EACrC,MAAM,EAGP;IACC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM;IACvB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,MAAM,cAAc;IAE9C,IAAI,CAAC,QAAQ,CAAC,SAAS;QACrB,OAAO,CAAA,GAAA,yUAAA,CAAA,WAAQ,AAAD;IAChB;IAEA,qBACE,kYAAC;QAAQ,WAAU;;0BACjB,kYAAC;gBAAG,WAAU;0BACX,KAAK,IAAI,CAAC,KAAK;;;;;;0BAElB,kYAAC;gBAAE,WAAU;0BACV,KAAK,IAAI,CAAC,IAAI;;;;;;0BAEjB,kYAAC;gBAAI,WAAU;0BACb,cAAA,kYAAC,wJAAA,CAAA,YAAS;oBACR,QAAQ;oBACR,YAAY;wBAAE,GAAG,gTAAA,CAAA,UAAI;wBAAE,GAAG,wIAAA,CAAA,UAAa;oBAAC;oBACxC,SAAS;wBACP,YAAY;4BACV,kBAAkB;4BAClB,eAAe;gCAAC,yNAAA,CAAA,UAAgB;6BAAC;4BACjC,eAAe;gCAAC,qPAAA,CAAA,UAAgB;6BAAC;wBACnC;oBACF;;;;;;;;;;;;;;;;;AAKV;AAEO,eAAe;IACpB,MAAM,QAAQ,MAAM,CAAA,GAAA,mHAAA,CAAA,cAAW,AAAD;IAC9B,OAAO,MAAM,GAAG,CAAC,CAAC,OAAS,CAAC;YAAE,MAAM,KAAK,IAAI;QAAC,CAAC;AACjD;AAEA,mCAAmC;AACnC,eAAe,cAAc,IAAY;IACvC,MAAM,OAAO,MAAM,CAAA,GAAA,mHAAA,CAAA,gBAAa,AAAD,EAAE;IACjC,IAAI,CAAC,MAAM;QACT,OAAO;YAAE,MAAM;YAAM,SAAS;QAAK;IACrC;IACA,OAAO;QAAE;QAAM,SAAS,KAAK,OAAO;IAAC;AACvC"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}