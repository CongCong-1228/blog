{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitani/Documents/project/blog/blog/app/data/post.ts"],"sourcesContent":["import path from \"path\";\nimport fs from \"fs\";\nimport matter from \"gray-matter\";\n\n// 读取全部文章数据\nconst rootDirectory = path.join(process.cwd(), \"posts\");\n\nexport const getAllPosts = async () => {\n  const posts = fs\n    .readdirSync(rootDirectory, { withFileTypes: true })\n    .filter((entry) => entry.isDirectory())\n    .map((dir) => dir.name);\n\n  const data = await Promise.all(\n    posts.map(async (post) => {\n      const postData = await getPostBySlug(post);\n      return {\n        slug: post,\n        meta: {\n          title: postData?.meta.title,\n          spoiler: postData?.meta.spoiler,\n          date: new Date(postData?.meta.date).toLocaleDateString(\"en-US\", {\n            month: \"long\",\n            day: \"numeric\",\n            year: \"numeric\",\n          }),\n        },\n      };\n    })\n  );\n\n  return data.sort((a, b) => Date.parse(b.meta.date) - Date.parse(a.meta.date));\n};\n\nexport const getPostBySlug = async (slug: string) => {\n  const filePath = path.join(rootDirectory, slug, \"index.md\");\n  if (!fs.existsSync(filePath)) {\n    return null;\n  }\n  try {\n    const fileContent = fs.readFileSync(filePath, \"utf-8\");\n    const { data: meta, content } = matter(fileContent);\n    return {\n      meta,\n      content,\n    };\n  } catch (error) {\n    console.error(\"Error reading file:\", error);\n    return null;\n  }\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,WAAW;AACX,MAAM,gBAAgB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAExC,MAAM,cAAc;IACzB,MAAM,QAAQ,6FAAA,CAAA,UAAE,CACb,WAAW,CAAC,eAAe;QAAE,eAAe;IAAK,GACjD,MAAM,CAAC,CAAC,QAAU,MAAM,WAAW,IACnC,GAAG,CAAC,CAAC,MAAQ,IAAI,IAAI;IAExB,MAAM,OAAO,MAAM,QAAQ,GAAG,CAC5B,MAAM,GAAG,CAAC,OAAO;QACf,MAAM,WAAW,MAAM,cAAc;QACrC,OAAO;YACL,MAAM;YACN,MAAM;gBACJ,OAAO,UAAU,KAAK;gBACtB,SAAS,UAAU,KAAK;gBACxB,MAAM,IAAI,KAAK,UAAU,KAAK,MAAM,kBAAkB,CAAC,SAAS;oBAC9D,OAAO;oBACP,KAAK;oBACL,MAAM;gBACR;YACF;QACF;IACF;IAGF,OAAO,KAAK,IAAI,CAAC,CAAC,GAAG,IAAM,KAAK,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI;AAC7E;AAEO,MAAM,gBAAgB,OAAO;IAClC,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,eAAe,MAAM;IAChD,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,WAAW;QAC5B,OAAO;IACT;IACA,IAAI;QACF,MAAM,cAAc,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QAC9C,MAAM,EAAE,MAAM,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,kMAAA,CAAA,UAAM,AAAD,EAAE;QACvC,OAAO;YACL;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO;IACT;AACF"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitani/Documents/project/blog/blog/app/ui/blogs/blogList.tsx"],"sourcesContent":["import { getAllPosts } from \"@/app/data/post\";\nimport Link from \"next/link\";\n\nexport default async function BlogList() {\n  const posts = await getAllPosts();\n  return (\n    <div className=\"flex flex-col gap-8 mt-4 items-center max-w-[50vw] mx-auto\">\n      {posts.map((post) => {\n        return (\n          <Link\n            href={`/blogs/${post.slug}`}\n            className=\"block py-4 w-full\"\n            key={post.slug}\n          >\n            <article className=\"w-full\">\n              <h2 className=\"text-blog-link text-[28px] font-black break-all whitespace-normal\">\n                {post.meta.title}\n              </h2>\n              <p className=\"text-[13px] text-gray-700 dark:text-gray-300\">\n                {post.meta.date}\n              </p>\n              <p className=\"mt-1\">{post.meta.spoiler}</p>\n            </article>\n          </Link>\n        );\n      })}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,eAAe;IAC5B,MAAM,QAAQ,MAAM,CAAA,GAAA,mHAAA,CAAA,cAAW,AAAD;IAC9B,qBACE,kYAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC;YACV,qBACE,kYAAC,gTAAA,CAAA,UAAI;gBACH,MAAM,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;gBAC3B,WAAU;0BAGV,cAAA,kYAAC;oBAAQ,WAAU;;sCACjB,kYAAC;4BAAG,WAAU;sCACX,KAAK,IAAI,CAAC,KAAK;;;;;;sCAElB,kYAAC;4BAAE,WAAU;sCACV,KAAK,IAAI,CAAC,IAAI;;;;;;sCAEjB,kYAAC;4BAAE,WAAU;sCAAQ,KAAK,IAAI,CAAC,OAAO;;;;;;;;;;;;eATnC,KAAK,IAAI;;;;;QAapB;;;;;;AAGN"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitani/Documents/project/blog/blog/app/blogs/page.tsx"],"sourcesContent":["import BlogList from \"@/app/ui/blogs/blogList\";\n\nexport default function BlogsPage() {\n  return <BlogList />;\n}\n\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBAAO,kYAAC,+HAAA,CAAA,UAAQ;;;;;AAClB"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}